{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;KAWX;;AAED,iBAAa,EAAC,uBAAS,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,OAAO,EAAC;AACjD,eAAO,CAAC,GAAG,CAAC,SAAS,GAAG,GAAG,GAAG,OAAO,CAAC,CAAC;AACvC,YAAI,YAAY,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;AACnD,oBAAY,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,oBAAY,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,oBAAY,CAAC,OAAO,GAAG,OAAO,CAAC;;AAE/B,YAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;AAC3D,mBAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;;AAED,iBAAa,EAAC,uBAAS,IAAI,EAAC,MAAM,EAAC,SAAS,EAAC,OAAO,EAAC;AACjD,YAAI,YAAY,GAAG,IAAI,EAAE,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;AACnD,oBAAY,CAAC,MAAM,GAAG,MAAM,CAAC;AAC7B,oBAAY,CAAC,SAAS,GAAG,SAAS,CAAC;AACnC,oBAAY,CAAC,OAAO,GAAG,OAAO,CAAC;;AAE/B,YAAI,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,WAAW,CAAC;AAC3D,mBAAW,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAClC;;CAMJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n    },\r\n\r\n    addClickEvent:function(node,target,component,handler){\r\n        console.log(component + \":\" + handler);\r\n        var eventHandler = new cc.Component.EventHandler();\r\n        eventHandler.target = target;\r\n        eventHandler.component = component;\r\n        eventHandler.handler = handler;\r\n\r\n        var clickEvents = node.getComponent(cc.Button).clickEvents;\r\n        clickEvents.push(eventHandler);\r\n    },\r\n    \r\n    addSlideEvent:function(node,target,component,handler){\r\n        var eventHandler = new cc.Component.EventHandler();\r\n        eventHandler.target = target;\r\n        eventHandler.component = component;\r\n        eventHandler.handler = handler;\r\n\r\n        var slideEvents = node.getComponent(cc.Slider).slideEvents;\r\n        slideEvents.push(eventHandler);\r\n    },\r\n\r\n    // called every frame, uncomment this function to activate update callback\r\n    // update: function (dt) {\r\n\r\n    // },\r\n});\r\n"
  ]
}