{
  "version": 3,
  "sources": [
    "unknown"
  ],
  "names": [],
  "mappings": "AAAA,EAAE,CAAC,KAAK,CAAC;AACL,eAAS,EAAE,CAAC,SAAS;;AAErB,cAAU,EAAE;;;;;;;;;;;AAWR,kBAAU,EAAC,IAAI;AACf,eAAO,EAAC,IAAI;AACZ,iBAAS,EAAC,CAAC;KACd;;;AAGD,UAAM,EAAE,kBAAY;AAChB,YAAI,CAAC,UAAU,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC9C,YAAI,CAAC,OAAO,GAAG,EAAE,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;AACtE,YAAI,IAAI,GAAG,IAAI,CAAC;;AAEhB,YAAI,cAAc,GAAG,SAAjB,cAAc,GAAa;AAC3B,cAAE,CAAC,EAAE,CAAC,GAAG,CAAC,IAAI,CAAC,UAAS,GAAG,EAAC;AACzB,oBAAG,GAAG,EAAC;AACF,sBAAE,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;iBAClC,MACG;AACA,8BAAU,CAAC,cAAc,EAAC,IAAI,CAAC,CAAC;iBACnC;aACH,CAAC,CAAC;SACN,CAAA;;AAED,YAAI,EAAE,GAAG,SAAL,EAAE,CAAY,IAAI,EAAC;AACnB,gBAAI,CAAC,IAAI,CAAC,GAAG,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC;AAC/B,gBAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC;AAC9B,0BAAc,EAAE,CAAC;SACpB,CAAC;AACF,eAAO,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAC7B,YAAI,CAAC,IAAI,CAAC,EAAE,CAAC,YAAY,EAAC,EAAE,CAAC,CAAC;KACjC;;AAED,UAAM,EAAE,gBAAU,EAAE,EAAE;AAClB,YAAG,IAAI,CAAC,UAAU,CAAC,MAAM,EAAC;AACtB,gBAAI,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AAC1C,gBAAI,CAAC,OAAO,CAAC,MAAM,GAAG,iBAAiB,CAAC;AACxC,iBAAI,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,EAAG,CAAC,EAAC;AACvB,oBAAI,CAAC,OAAO,CAAC,MAAM,IAAI,GAAG,CAAC;aAC9B;SACJ;KACJ;CACJ,CAAC,CAAC",
  "file": "unknown",
  "sourcesContent": [
    "cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //    default: null,      // The default value will be used only when the component attaching\r\n        //                           to a node for the first time\r\n        //    url: cc.Texture2D,  // optional, default is typeof default\r\n        //    serializable: true, // optional, default is true\r\n        //    visible: true,      // optional, default is true\r\n        //    displayName: 'Foo', // optional\r\n        //    readonly: false,    // optional, default is false\r\n        // },\r\n        // ...\r\n        _reconnect:null,\r\n        _lblTip:null,\r\n        _lastPing:0,\r\n    },\r\n\r\n    // use this for initialization\r\n    onLoad: function () {\r\n        this._reconnect = cc.find(\"Canvas/reconnect\");\r\n        this._lblTip = cc.find(\"Canvas/reconnect/tip\").getComponent(cc.Label);\r\n        var self = this;\r\n        \r\n        var fnTestServerOn = function(){\r\n            cc.vv.net.test(function(ret){\r\n               if(ret){\r\n                    cc.director.loadScene('hall');                \r\n               }\r\n               else{\r\n                   setTimeout(fnTestServerOn,3000);\r\n               }\r\n            });\r\n        }\r\n        \r\n        var fn = function(data){\r\n            self.node.off('disconnect',fn);\r\n            self._reconnect.active = true;\r\n            fnTestServerOn();\r\n        };\r\n        console.log(\"adasfdasdfsdf\");\r\n        this.node.on('disconnect',fn);\r\n    },\r\n    // called every frame, uncomment this function to activate update callback\r\n    update: function (dt) {\r\n        if(this._reconnect.active){\r\n            var t = Math.floor(Date.now() / 1000) % 4;\r\n            this._lblTip.string = \"与服务器断开连接，正在尝试重连\";\r\n            for(var i = 0; i < t; ++ i){\r\n                this._lblTip.string += '.';\r\n            }\r\n        }\r\n    },\r\n});\r\n"
  ]
}